# --files: List files that would be searched but do not search
# --no-ignore: Do not respect .gitignore, etc...
# --hidden: Search hidden files and folders
# --follow: Follow symlinks
# --glob: Additional conditions for search (in this case ignore everything in the .git/ folder)
export FZF_DEFAULT_COMMAND='rg --files --no-ignore --hidden --follow --glob "!.git/*"'

# aliases 
source /mnt/c/Users/lwalters/dotfiles/linux/shell_profile/alias

# ssh agent
if [ -f $HOME/.ssh/start-agent.sh ]; then
    . $HOME/.ssh/start-agent.sh
fi

HISTSIZE=5000
HISTFILESIZE=10000
shopt -s histappend

# \[\033]0;$TITLEPREFIX:${PWD//[^[:ascii:]]/?}\007\]\n\[\033[32m\]\u@\h \[\033[35m\]$MSYSTEM \[\033[33m\]\w\[\033[36m\]`__git_ps1`\[\033[0m\]\n$
#  PS1="\\[\\033[01;34m\\]\\w \\[\\033[31m\\]\`git branch 2> /dev/null | grep -e ^* | sed -E  s/^\\\\\\\\\\*\\ \\(.+\\)\$/\\(\\\\\\\\\\1\\)\\ /\`\\[\\033[35m\\]\$\\[\\033[00m\\]
function color_my_prompt {
    local __cur_location="\033[33m\w\033[00m"
    # local __prompt_tail="\[\033[35m\]"
    local ref=$(git symbolic-ref HEAD 2>/dev/null)
    if [ -z $ref ]; then 
        echo "$__cur_location"
        return; 
    fi

    if [[ -n $(git status -s 2>/dev/null) ]]; then
        local __git_branch_color="\[\033[31m\]"
        local dirty="*"
    else
        local __git_branch_color="\[\033[36m\]"
        local dirty=""
    fi
    echo "$__cur_location $__git_branch_color(${ref#refs/heads/}${dirty})\[\033[00m\]"
}

set_bash_prompt() {
    PS1="$(color_my_prompt)\n$ "
}

#export PS1='($color_my_prompt) $ '
PROMPT_COMMAND=set_bash_prompt

if [[ $PROMPT_COMMAND == *"history -a; history -c; history -r;"* ]]; then
  echo "It's there!"
else
  export PROMPT_COMMAND="history -a; history -c; history -r; $PROMPT_COMMAND"
fi

[ -f ~/.fzf.bash ] && source ~/.fzf.bash

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
